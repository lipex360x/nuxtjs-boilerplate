{
  "Template Snippets": {
    "prefix": "snippetTemplate",
    "body": [
      "\"${1:SNIPPET_TITLE}\": {",
      "  \"prefix\": \"${2:PREFIX}\",",
      "  \"body\": [",
      "    \"${3:BODY}\"",
      "  ]",
      "},",
      "",
    ]
  },

  "Plop File": {
    "prefix": "plopTemplate",
    "body": [
      "module.exports = {",
      "  description: '${1:Description}',",
      "  prompts: [",
      "    {",
      "      type: 'input',",
      "      name: 'name',",
      "      message: '${2:Text}'",
      "    }",
      "  ],",
      "",
      "  actions: (data) => {",
      "    const action = [",
      "      {",
      "        type: 'add',",
      "        path: '${3:path_to_create_file}',",
      "        templateFile: './${TM_DIRECTORY/^.+\\/(.*)$/$1/}/templates/XXXXXXXXXX'",
      "      },",
      "      function (data) {",
      "        return `File \\${data.name} created`",
      "      }",
      "    ]",
      "",
      "    return action",
      "",
      "  }",
      "}",
      ""
    ]
  },

  "Plop Prompt Template": {
    "prefix": "promptTemplate",
    "body": [
      "{",
      "  type: 'input',",
      "  name: '${1:NAME}',",
      "  message: '${2:Text}',",
      "  default: 'Default_Value',",
      "  validate: (value) => {",
      "    if (!value) {",
      "      return '${1:NAME} is required'",
      "    }",
      "    return true",
      "  }",
      "}"
    ]
  },


  "NuxtJS Component Template": {
    "prefix": "componentTemplate",
    "body": [
      "<template>",
      "  <section class=\"${TM_DIRECTORY/^.+\\/(.*)$/$1/}-${TM_FILENAME_BASE/(.*)/${1:/downcase}/}\">",
      "    <h1>$TM_FILENAME_BASE</h1>",
      "  </section>",
      "</template>",
      "",
      "<style lang=\"scss\" scoped>",
      ".${TM_DIRECTORY/^.+\\/(.*)$/$1/}-${TM_FILENAME_BASE/(.*)/${1:/downcase}/} {",
      "  //scss here",
      "}",
      "</style>",
      ""
    ]
  },

  "NuxtJS Script Template": {
    "prefix": "scriptTemplate",
    "body": [
      "",
      "<script lang=\"ts\">",
      "import Vue from 'vue'",
      "",
      "export default Vue.extend({",
      "  // script here",
      "})",
      "</script>",
      "",
    ]
  },

  "NuxtJS Page Template": {
    "prefix": "pageTemplate",
    "body": [
      "<template>",
      "  <${1:PAGE_TEMPLATE} />",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import Vue from 'vue'",
      "",
      "export default Vue.extend({",
      "  layout: '${2:LAYOUT_NAME}'",
      "})",
      "</script>",
      ""
    ]
  },

  "NuxtJS Props Template": {
    "prefix": "propsTemplate",
    "body": [
      "props: {",
      "  ${1:NAME}: { type: ${2|String,Number,Bolean,Object|}, required: ${3|true,false|} }",
      "}",
    ]
  },

  "NuxtJS Methods Template": {
    "prefix": "methodsTemplate",
    "body": [
      "methods: {",
      "  ${1:FUNCTION_NAME}(): ${2|void,string,number,bolean,object,array|} {",
      "    return true",
      "  }",
      "}",
    ]
  },

  "NuxtJS Computed Template": {
    "prefix": "computedTemplate",
    "body": [
      "computed: {",
      "  ${1:FUNCTION_NAME}(): ${2|void,string,number,bolean,object,array|} {",
      "    return true",
      "  }",
      "}",
    ]
  },

  "NuxtJS Mounted Template": {
    "prefix": "mountedTemplate",
    "body": [
      "mounted() {",
      "  return true",
      "}",
    ]
  },

  "NuxtJS @Action Store": {
    "prefix": "actionStoreTemplate",
    "body": [
      "@Action",
      "${1:function_name}() {",
      "  this.context.commit('${2:MUTATION_NAME}', 'value')",
      "}",
    ]
  },

  "NuxtJS @Mutation Store": {
    "prefix": "mutationStoreTemplate",
    "body": [
      "@Mutation",
      "${1:MUTATION_NAME}(${2:prop_name}: ${3|string,number,bolean,object|}) {",
      "  this.${4:state} = ${2:prop_name}",
      "}",
    ]
  },

  "NuxtJS Getters Store": {
    "prefix": "getStoreTemplate",
    "body": [
      "public get \\$${1:PROP_NAME}() {",
      "  return this.${1:PROP_NAME}",
      "}",
    ]
  },

}
